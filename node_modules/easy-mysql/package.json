{
  "_args": [
    [
      {
        "raw": "easy-mysql",
        "scope": null,
        "escapedName": "easy-mysql",
        "name": "easy-mysql",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\wamp\\www\\web-app"
    ]
  ],
  "_from": "easy-mysql@latest",
  "_id": "easy-mysql@1.0.3",
  "_inCache": true,
  "_location": "/easy-mysql",
  "_npmUser": {
    "name": "bdondo",
    "email": "bdondo@gmail.com"
  },
  "_npmVersion": "1.3.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "easy-mysql",
    "scope": null,
    "escapedName": "easy-mysql",
    "name": "easy-mysql",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/easy-mysql/-/easy-mysql-1.0.3.tgz",
  "_shasum": "fb8ae164774a173c768c14628d104391be4b6b0e",
  "_shrinkwrap": null,
  "_spec": "easy-mysql",
  "_where": "C:\\wamp\\www\\web-app",
  "author": {
    "name": "MOG, Inc."
  },
  "bin": {},
  "bugs": {
    "url": "https://github.com/Mog-Inc/easy-mysql/issues"
  },
  "contributors": [
    {
      "name": "Bryan Donovan"
    }
  ],
  "dependencies": {
    "generic-pool": "2.0.2",
    "mysql": ">=0.9.1"
  },
  "description": "Light MySQL query wrapper with connection pooling.",
  "devDependencies": {
    "async": "0.1.22",
    "istanbul": "0.1.43",
    "jsdoc-toolkit": ">=0.0.2",
    "jshint": "2.0.1",
    "mocha": "1.12.0",
    "optimist": "0.6.0",
    "sinon": "1.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "fb8ae164774a173c768c14628d104391be4b6b0e",
    "tarball": "https://registry.npmjs.org/easy-mysql/-/easy-mysql-1.0.3.tgz"
  },
  "engines": {
    "node": ">= 0.4.10"
  },
  "homepage": "http://mog.com",
  "keywords": [
    "mysql",
    "nodejs"
  ],
  "main": "index",
  "maintainers": [
    {
      "name": "bdondo",
      "email": "bdondo@gmail.com"
    },
    {
      "name": "bryandonovan",
      "email": "bdondo@gmail.com"
    }
  ],
  "name": "easy-mysql",
  "optionalDependencies": {},
  "readme": "Node EasyMySQL\n==============\n\n## Purpose\n\nA small collection of simple functions that make using MySQL with node.js easier. \nUses the [node-mysql](https://github.com/felixge/node-mysql) library.\n\nDeveloped by [MOG.com](http://mog.com)\n\n## Installation\n\n```\nnpm install easy-mysql\n```\n\n## Overview\n\nEasyMySQL allows you to handle MySQL connection pooling, acquiring connections, and releasing them with ease.\nFor example, where you might do this (using node-pool):\n\n    var get_widget = function(id, cb) {\n        pool.acquire(function (err, client) {\n            if (err) {\n                pool.release(client);\n                cb(err, null);\n            } else {\n                var sql = 'select * from widgets where id = ?';\n                client.query(sql, [id], function (err, results) {\n                    pool.release(client);\n                    if (err || results && results.length === 0) {\n                        cb(err, null);\n                    } else {\n                        cb(null, results[0]);\n                    }\n                });\n            }\n        });\n    };\n\n...you can do this instead with EasyMySQL:\n\n    var get_widget = function(id, cb) {\n        var sql = 'select * from widgets where id = ?';\n        easy_mysql.get_one(sql, [id], cb);\n    };\n\n## Usage\n\n    // require the module\n    var EasyMySQL = require('easy-mysql');\n\n### Connection Modes\n\nYou can connect three different ways with EasyMySQL:\n\n  1. Direct: Directly establish a single connection for each query.\n  This is probably not a good idea for production code, but may be fine for code\n  where you don't want to set up a pool, such as in unit tests.\n\n  2. Custom Pool: Pass in your own pool object.  It must have functions named\n  'acquire' and 'release'.\n\n  3. Built-in Pool: Use the built-in pool, which uses [node-pool](https://github.com/coopernurse/node-pool)\n\n\n#### Direct Connect Example\n\n    var settings = {\n        user     : 'myuser',\n        password : 'mypass',\n        database : 'mydb'\n    };\n \n    var easy_mysql = EasyMySQL.connect(settings);\n\n#### Custom Pool Example\n\n    var my_pool = /* create your own pool here */;\n    var easy_mysql = EasyMySQL.connect_with_pool(pool);\n\n#### Built-in Pool Example\n\n    var settings = {\n        user      : 'myuser',\n        password  : 'mypass',\n        database  : 'mydb',\n        pool_size : 50\n    };\n\n    var easy_mysql = EasyMySQL.connect_with_easy_pool(settings);\n\n#### Logging\n\nYou can specify a logger to log error events (more event types may be added later).\n\n    var settings = {\n        user     : 'myuser',\n        password : 'mypass',\n        database : 'mydb',\n        logging: {\n            logger: my_logger,\n            events: {\n                error: {level: 'warn'}\n            }\n        }\n    };\n\nYou must pass in your own logger and it must have a function with the same\nname as the `level` you specify.\n\n\n### Instance methods\n\n#### get_one / getOne\n\nReturns only one result, and if no results are found, returns null.\n\n    var sql = 'select * from widgets where id = ?';\n    easy_mysql.get_one(sql, [123], function (err, result) {\n        cb(err, result);\n    });\n\n\n#### get_all / getAll\n\nReturns an array of results, and if no results are found, returns an empty array.\n\n    var sql = 'select * from widgets where id > ?';\n    easy_mysql.get_all(sql, [123], function (err, results) {\n        cb(err, results);\n    });\n\n#### execute\n\nExecutes an arbitrary SQL query and returns the results from node-mysql.\n\n    var sql = 'update widgets set foo = 'bar' where id = ?';\n    easy_mysql.execute(sql, [123], function (err, results) {\n        cb(err, results);\n    });\n\n## Tests and Docs\n\nTo run tests and generate docs, first run:\n\n    npm install -d\n\nRun the tests:\n\n    make test\n\nGenerate JSDocs:\n\n    make doc\n\n\n## Contribute\n\nIf you would like to contribute to the project, please fork it and send us a pull request.  Please add tests\nfor any new features or bug fixes.  Also run ``make lint`` before submitting the pull request.\n\n\n## License\n\nnode-easy-mysql is licensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/%3AMog-Inc/easy-mysql.git"
  },
  "scripts": {},
  "version": "1.0.3"
}
